name: Test application

on:
    pull_request:
    push:
        branches:
            - '[0-9]+.[0-9]+'
            - '[0-9]+.x'

jobs:
    code-style:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout project
          uses: actions/checkout@v3

        - name: Install and configure PHP
          uses: shivammathur/setup-php@v2
          with:
            coverage: none
            php-version: 8.1

        - name: Get composer cache directory
          id: composer-cache-dir
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        - name: Cache dependencies
          uses: actions/cache@v2
          id: composer-cache
          with:
            path: ${{ steps.composer-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-composer-

        - name: Install dependencies
          run: composer install --no-interaction --prefer-dist

        - name: Fix code style
          run: vendor/bin/phpcs -p --standard=PSR12 --ignore=vendor/ ./

    phpstan:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout project
          uses: actions/checkout@v3

        - name: Install and configure PHP
          uses: shivammathur/setup-php@v2
          with:
            coverage: none
            php-version: 8.1

        - name: Get composer cache directory
          id: composer-cache-dir
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        - name: Cache dependencies
          uses: actions/cache@v2
          id: composer-cache
          with:
            path: ${{ steps.composer-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-composer-

        - name: Install dependencies
          run: composer install --no-interaction --prefer-dist

        - name: Run PHPStan
          run: vendor/bin/phpstan analyse

    unit-test:
        name: 'Run unit tests with php ${{ matrix.php-version }} with symfony ${{ matrix.symfony-version}}'
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                include:
                    - php-version: '8.0'
                      symfony-version: '5.4.*'

                    - php-version: '8.1'
                      symfony-version: '5.4.*'

                    - php-version: '8.1'
                      symfony-version: '6.0.*'

                    - php-version: '8.1'
                      symfony-version: '6.1.*'

        steps:
            - name: Checkout project
              uses: actions/checkout@v3

            - name: Install and configure PHP
              uses: shivammathur/setup-php@v2
              with:
                  coverage: pcov
                  php-version: ${{ matrix.php-version }}

            - name: Get composer cache directory
              id: composer-cache-dir
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              id: composer-cache
              with:
                  path: ${{ steps.composer-cache-dir.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: Install dependencies
              run: |
                  composer validate --strict
                  composer require --no-update symfony/serializer:${{ matrix.symfony-version }}
                  composer install --no-interaction --prefer-dist

            - name: Run tests
              run: vendor/bin/phpunit --testsuite=unit --coverage-clover=coverage.xml

    functional-test:
      name: 'Run functional tests'
      runs-on: ubuntu-latest

      steps:
        - name: Checkout project
          uses: actions/checkout@v3

        - name: Install and configure PHP
          uses: shivammathur/setup-php@v2
          with:
            coverage: none
            php-version: 8.1

        - name: Get composer cache directory
          id: composer-cache-dir
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        - name: Cache dependencies
          uses: actions/cache@v2
          id: composer-cache
          with:
            path: ${{ steps.composer-cache-dir.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
            restore-keys: |
              ${{ runner.os }}-composer-

        - name: Install dependencies
          run: composer install --no-interaction --prefer-dist

        - name: Setup OpenSearch
          uses: ankane/setup-opensearch@v1
          with:
            opensearch-version: '1.2'

        - name: Run tests
          run: vendor/bin/phpunit --testsuite=functional
